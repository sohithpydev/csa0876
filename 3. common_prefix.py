# -*- coding: utf-8 -*-
"""common_prefix

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qiSVRD1fuasel8Pd97kV8WGyCfHEGUxp

Write a function to find the longest common prefix string amongst an array of strings. If there is no common prefix, return an empty string "".

**Test Case 1:**

**Input:** strs = [“flower”,“flow”,“flight”]

**Output:** "fl"

**Test Case 2:**

**Input:** strs = [“dog”,“racecar”,“car”]

**Output:** ""
"""

def longest_common_prefix(strs):
    # If the array is empty, return an empty string
    if not strs:
        return ""

    # Iterate through the characters in the first string
    for i, char in enumerate(strs[0]):
        # Check if the character at this index is the same across all strings
        for string in strs[1:]:
            # If the index is out of range for any string or characters don't match, return the prefix
            if i >= len(string) or string[i] != char:
                return strs[0][:i]

    # If the loop completes without returning, the entire first string is the prefix
    return strs[0]

# Test Case 1
strs1 = ["flower", "flow", "flight"]
print(longest_common_prefix(strs1))

# Test Case 2
strs2 = ["dog", "racecar", "car"]
print(longest_common_prefix(strs2))